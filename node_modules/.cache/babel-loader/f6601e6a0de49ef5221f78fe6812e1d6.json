{"ast":null,"code":"import Axios from 'axios';\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_TOPSELLERS_LIST_REQUEST, USER_TOPSELLERS_LIST_SUCCESS, USER_TOPSELLERS_LIST_FAIL, Dashboard_SUMMARY_FAIL, Dashboard_SUMMARY_SUCCESS, Dashboard_SUMMARY_REQUEST } from '../constants/userConstants';\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n    return error.response;\n  }\n};\nexport const summaryDashboard = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_SUMMARY_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders/summary', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_SUMMARY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n  document.location.href = '/signin';\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo === null || userInfo === void 0 ? void 0 : userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/users/profile`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/users/${user._id}`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  dispatch({\n    type: USER_LIST_REQUEST\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get('/api/users', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DELETE_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.delete(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listTopSellers = () => async dispatch => {\n  dispatch({\n    type: USER_TOPSELLERS_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/users/top-sellers');\n    dispatch({\n      type: USER_TOPSELLERS_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_TOPSELLERS_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/home/mghzaiel/Téléchargements/ecommerce/frontend/src/actions/userActions.js"],"names":["Axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_TOPSELLERS_LIST_REQUEST","USER_TOPSELLERS_LIST_SUCCESS","USER_TOPSELLERS_LIST_FAIL","Dashboard_SUMMARY_FAIL","Dashboard_SUMMARY_SUCCESS","Dashboard_SUMMARY_REQUEST","register","name","email","password","dispatch","type","payload","data","post","error","response","message","summaryDashboard","getState","ORDER_SUMMARY_REQUEST","userSignin","userInfo","get","headers","Authorization","token","ORDER_SUMMARY_SUCCESS","ORDER_CREATE_FAIL","signin","localStorage","setItem","JSON","stringify","signout","removeItem","document","location","href","detailsUser","userId","updateUserProfile","user","put","updateUser","_id","listUsers","deleteUser","delete","listTopSellers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,oBAHF,EAIEC,kBAJF,EAKEC,qBALF,EAMEC,qBANF,EAOEC,gBAPF,EAQEC,mBARF,EASEC,mBATF,EAUEC,YAVF,EAWEC,wBAXF,EAYEC,2BAZF,EAaEC,2BAbF,EAcEC,iBAdF,EAeEC,iBAfF,EAgBEC,cAhBF,EAiBEC,mBAjBF,EAkBEC,mBAlBF,EAmBEC,gBAnBF,EAoBEC,mBApBF,EAqBEC,gBArBF,EAsBEC,4BAtBF,EAuBEC,4BAvBF,EAwBEC,yBAxBF,EAyBEC,sBAzBF,EA0BEC,yBA1BF,EA2BEC,yBA3BF,QA4BO,4BA5BP;AA8BA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AACrEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE5B,qBAAR;AAA+B6B,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAxC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAACoC,IAAN,CAAW,qBAAX,EAAkC;AACvDP,MAAAA,IADuD;AAEvDC,MAAAA,KAFuD;AAGvDC,MAAAA;AAHuD,KAAlC,CAAvB;AAKAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE3B,qBAAR;AAA+B4B,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACD,GAPD,CAOE,OAAOE,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE7B,kBADC;AAEP8B,MAAAA,OAAO,EACLG,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOA,WAAOF,KAAK,CAACC,QAAb;AACD;AACF,CAnBM;AAqBP,OAAO,MAAME,gBAAgB,GAAE,MAAM,OAAOR,QAAP,EAAiBS,QAAjB,KAA8B;AACjET,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAES;AAAR,GAAD,CAAR;AACA,QAAM;AACJC,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFH,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAAC6C,GAAN,CAAU,qBAAV,EAAiC;AACtDC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AAD6C,KAAjC,CAAvB;AAGAhB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEgB,qBAAR;AAA+Bf,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEiB,iBADC;AAEPhB,MAAAA,OAAO,EACLG,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAnBM;AAqBP,OAAO,MAAMY,MAAM,GAAG,CAACrB,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEzB,mBAAR;AAA6B0B,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAtC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAACoC,IAAN,CAAW,mBAAX,EAAgC;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAhC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAExB,mBAAR;AAA6ByB,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAiB,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAepB,IAAf,CAAjC;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE1B,gBADC;AAEP2B,MAAAA,OAAO,EACLG,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAfM;AAiBP,OAAO,MAAMiB,OAAO,GAAG,MAAOxB,QAAD,IAAc;AACzCoB,EAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACAL,EAAAA,YAAY,CAACK,UAAb,CAAwB,WAAxB;AACAL,EAAAA,YAAY,CAACK,UAAb,CAAwB,iBAAxB;AACAzB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEvB;AAAR,GAAD,CAAR;AACAgD,EAAAA,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAyB,SAAzB;AACD,CANM;AAOP,OAAO,MAAMC,WAAW,GAAIC,MAAD,IAAY,OAAO9B,QAAP,EAAiBS,QAAjB,KAA8B;AACnET,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE/B,oBAAR;AAA8BgC,IAAAA,OAAO,EAAE4B;AAAvC,GAAD,CAAR;AACA,QAAM;AACJnB,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFH,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAAC6C,GAAN,CAAW,cAAaiB,MAAO,EAA/B,EAAkC;AACvDhB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAV,aAAUA,QAAV,uBAAUA,QAAQ,CAAEI,KAAM;AAA3C;AAD8C,KAAlC,CAAvB;AAGAhB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE9B,oBAAR;AAA8B+B,MAAAA,OAAO,EAAEC;AAAvC,KAAD,CAAR;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEhC,iBAAR;AAA2BiC,MAAAA,OAAO,EAAEK;AAApC,KAAD,CAAR;AACD;AACF,CAjBM;AAkBP,OAAO,MAAMwB,iBAAiB,GAAIC,IAAD,IAAU,OAAOhC,QAAP,EAAiBS,QAAjB,KAA8B;AACvET,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAErB,2BAAR;AAAqCsB,IAAAA,OAAO,EAAE8B;AAA9C,GAAD,CAAR;AACA,QAAM;AACJrB,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFH,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAACiE,GAAN,CAAW,oBAAX,EAAgCD,IAAhC,EAAsC;AAC3DlB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AADkD,KAAtC,CAAvB;AAGAhB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEpB,2BAAR;AAAqCqB,MAAAA,OAAO,EAAEC;AAA9C,KAAD,CAAR;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAExB,mBAAR;AAA6ByB,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAiB,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAepB,IAAf,CAAjC;AACD,GAPD,CAOE,OAAOE,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEtB,wBAAR;AAAkCuB,MAAAA,OAAO,EAAEK;AAA3C,KAAD,CAAR;AACD;AACF,CAnBM;AAoBP,OAAO,MAAM2B,UAAU,GAAIF,IAAD,IAAU,OAAOhC,QAAP,EAAiBS,QAAjB,KAA8B;AAChET,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAErB,2BAAR;AAAqCsB,IAAAA,OAAO,EAAE8B;AAA9C,GAAD,CAAR;AACA,QAAM;AACJrB,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFH,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAACiE,GAAN,CAAW,cAAaD,IAAI,CAACG,GAAI,EAAjC,EAAoCH,IAApC,EAA0C;AAC/DlB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AADsD,KAA1C,CAAvB;AAGAhB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEb,mBAAR;AAA6Bc,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ,gBAAR;AAA0Ba,MAAAA,OAAO,EAAEK;AAAnC,KAAD,CAAR;AACD;AACF,CAjBM;AAkBP,OAAO,MAAM6B,SAAS,GAAG,MAAM,OAAOpC,QAAP,EAAiBS,QAAjB,KAA8B;AAC3DT,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEnB;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AACJ6B,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AADR,QAEFH,QAAQ,EAFZ;AAGA,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAAC6C,GAAN,CAAU,YAAV,EAAwB;AAC7CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADjC;AADoC,KAAxB,CAAvB;AAKAhB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAElB,iBAAR;AAA2BmB,MAAAA,OAAO,EAAEC;AAApC,KAAD,CAAR;AACD,GAVD,CAUE,OAAOE,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEjB,cAAR;AAAwBkB,MAAAA,OAAO,EAAEK;AAAjC,KAAD,CAAR;AACD;AACF,CAnBM;AAoBP,OAAO,MAAM8B,UAAU,GAAIP,MAAD,IAAY,OAAO9B,QAAP,EAAiBS,QAAjB,KAA8B;AAClET,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEhB,mBAAR;AAA6BiB,IAAAA,OAAO,EAAE4B;AAAtC,GAAD,CAAR;AACA,QAAM;AACJnB,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFH,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAACsE,MAAN,CAAc,cAAaR,MAAO,EAAlC,EAAqC;AAC1DhB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AADiD,KAArC,CAAvB;AAGAhB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEf,mBAAR;AAA6BgB,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEd,gBAAR;AAA0Be,MAAAA,OAAO,EAAEK;AAAnC,KAAD,CAAR;AACD;AACF,CAjBM;AAkBP,OAAO,MAAMgC,cAAc,GAAG,MAAM,MAAOvC,QAAP,IAAoB;AACtDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEa,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAAC6C,GAAN,CAAU,wBAAV,CAAvB;AACAb,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,4BAAR;AAAsCW,MAAAA,OAAO,EAAEC;AAA/C,KAAD,CAAR;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,yBAAR;AAAmCU,MAAAA,OAAO,EAAEK;AAA5C,KAAD,CAAR;AACD;AACF,CAZM","sourcesContent":["import Axios from 'axios';\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_SIGNIN_FAIL,\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNOUT,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_TOPSELLERS_LIST_REQUEST,\n  USER_TOPSELLERS_LIST_SUCCESS,\n  USER_TOPSELLERS_LIST_FAIL,\n  Dashboard_SUMMARY_FAIL,\n  Dashboard_SUMMARY_SUCCESS,\n  Dashboard_SUMMARY_REQUEST\n} from '../constants/userConstants';\n\nexport const register = (name, email, password) => async (dispatch) => {\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await Axios.post('/api/users/register', {\n      name,\n      email,\n      password,\n    });\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n    return error.response;\n  }\n};\n\nexport const summaryDashboard= () => async (dispatch, getState) => {\n  dispatch({ type: ORDER_SUMMARY_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get('/api/orders/summary', {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_SUMMARY_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signin = (email, password) => async (dispatch) => {\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await Axios.post('/api/users/signin', { email, password });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  dispatch({ type: USER_SIGNOUT });\n  document.location.href = '/signin';\n};\nexport const detailsUser = (userId) => async (dispatch, getState) => {\n  dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get(`/api/users/${userId}`, {\n      headers: { Authorization: `Bearer ${userInfo?.token}` },\n    });\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DETAILS_FAIL, payload: message });\n  }\n};\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.put(`/api/users/profile`, user, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\n  }\n};\nexport const updateUser = (user) => async (dispatch, getState) => {\n  dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.put(`/api/users/${user._id}`, user, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_UPDATE_FAIL, payload: message });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  dispatch({ type: USER_LIST_REQUEST });\n  try {\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    const { data } = await Axios.get('/api/users', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n    dispatch({ type: USER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_LIST_FAIL, payload: message });\n  }\n};\nexport const deleteUser = (userId) => async (dispatch, getState) => {\n  dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.delete(`/api/users/${userId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DELETE_FAIL, payload: message });\n  }\n};\nexport const listTopSellers = () => async (dispatch) => {\n  dispatch({ type: USER_TOPSELLERS_LIST_REQUEST });\n  try {\n    const { data } = await Axios.get('/api/users/top-sellers');\n    dispatch({ type: USER_TOPSELLERS_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_TOPSELLERS_LIST_FAIL, payload: message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}